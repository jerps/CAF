
/*                                                                           +
     (c) 2019 John Erps                                                      +
     This software is licensed under the MIT license (see LICENSE)           +
                                                                             +
*/                                                                           +

             PGM        PARM(&SLIB &TLIB)
             DCL        VAR(&SLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TLIB) TYPE(*CHAR) LEN(10)

             DCL        VAR(&A50) TYPE(*CHAR) LEN(50)

             DCL        VAR(&ERRMSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&ERRMSGDTA) TYPE(*CHAR) LEN(256)
             DCL        VAR(&ERRMSGF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ERRMSGFLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ERRORSW) TYPE(*LGL)

             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERROR))


             IF         COND(&SLIB *EQ *DFT *AND &TLIB *EQ *DFT) +
                          THEN(SNDPGMMSG MSGID(CPF9897) +
                          MSGF(QCPFMSG) MSGDTA('Source and target +
                          libraries can not both be *DFT.') +
                          MSGTYPE(*ESCAPE))

             CALL       PGM(RTVDFTCAFL) PARM(&SLIB)
             CALL       PGM(RTVDFTCAFL) PARM(&TLIB)

             RTVDTAARA  DTAARA(&SLIB/CAPPSSAMA0 *ALL) RTNVAR(&A50)
             CHGDTAARA  DTAARA(&TLIB/CAPPSSAMA0 *ALL) VALUE(&A50)

             CPYF       FROMFILE(&SLIB/CSYSBASEF0) +
                          TOFILE(&TLIB/CSYSBASEF0) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)
             CPYF       FROMFILE(&SLIB/CSYSBASEF1) +
                          TOFILE(&TLIB/CSYSBASEF1) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)
             CPYF       FROMFILE(&SLIB/CSYSBASEF2) +
                          TOFILE(&TLIB/CSYSBASEF2) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)
             CPYF       FROMFILE(&SLIB/CSYSSQLSF1) +
                          TOFILE(&TLIB/CSYSSQLSF1) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)
             CPYF       FROMFILE(&SLIB/CAPPSSAMF1) +
                          TOFILE(&TLIB/CAPPSSAMF1) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)
             CPYF       FROMFILE(&SLIB/CAPPSSAMF2) +
                          TOFILE(&TLIB/CAPPSSAMF2) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)
             CPYF       FROMFILE(&SLIB/CAPPSSAMF3) +
                          TOFILE(&TLIB/CAPPSSAMF3) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)
             CPYF       FROMFILE(&SLIB/CAPPSSAMF4) +
                          TOFILE(&TLIB/CAPPSSAMF4) MBROPT(*REPLACE) +
                          FMTOPT(*MAP *DROP)

             RETURN


 ERROR:      IF         COND(&ERRORSW) THEN(SNDPGMMSG MSGID(CPF9999) +
                          MSGF(QCPFMSG) MSGTYPE(*ESCAPE))
             CHGVAR     VAR(&ERRORSW) VALUE('1')
 ERROR2:     RCVMSG     MSGTYPE(*DIAG) MSGDTA(&ERRMSGDTA) +
                          MSGID(&ERRMSGID) MSGF(&ERRMSGF) +
                          SNDMSGFLIB(&ERRMSGFLIB)
             IF         COND(&ERRMSGID = ' ') THEN(GOTO CMDLBL(ERROR3))
             SNDPGMMSG  MSGID(&ERRMSGID) MSGF(&ERRMSGFLIB/&ERRMSGF) +
                          MSGDTA(&ERRMSGDTA) MSGTYPE(*DIAG)
             GOTO       CMDLBL(ERROR2)
 ERROR3:     RCVMSG     MSGTYPE(*EXCP) MSGDTA(&ERRMSGDTA) +
                          MSGID(&ERRMSGID) MSGF(&ERRMSGF) +
                          SNDMSGFLIB(&ERRMSGFLIB)
             SNDPGMMSG  MSGID(&ERRMSGID) MSGF(&ERRMSGFLIB/&ERRMSGF) +
                          MSGDTA(&ERRMSGDTA) MSGTYPE(*ESCAPE)

             ENDPGM


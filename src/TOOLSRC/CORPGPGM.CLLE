
/*                                                                           +
     (c) 2019 John Erps                                                      +
     This software is licensed under the MIT license (see LICENSE)           +
                                                                             +
                                                                             +
     Compile RPG/RPGLE Program                                               +
                                                                             +
*/

             PGM        PARM(&SRCLIB &SRCFILE &SRCMBR &TGTLIB +
                          &ACTGRP &TGTRLS &INCDBGSRC)
             DCL        VAR(&SRCLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SRCFILE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SRCMBR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TGTLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ACTGRP) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TGTRLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&INCDBGSRC) TYPE(*CHAR) LEN(10)

             DCL        VAR(&SRCTYPE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DBGSRC) TYPE(*CHAR) LEN(10)

             DCL        VAR(&ERRMSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&ERRMSGDTA) TYPE(*CHAR) LEN(256)
             DCL        VAR(&ERRMSGF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ERRMSGFLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ERRORSW) TYPE(*LGL)

             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERROR))


             RTVMBRD    FILE(&SRCLIB/&SRCFILE) MBR(&SRCMBR) +
                          SRCTYPE(&SRCTYPE)

             IF         COND(&SRCTYPE *EQ RPGLE) THEN(DO)
             IF         COND(&INCDBGSRC *EQ *YES) THEN(CHGVAR +
                          VAR(&DBGSRC) VALUE(*ALL))
             ELSE       CMD(CHGVAR VAR(&DBGSRC) VALUE(*NONE))
             IF         COND(&ACTGRP *EQ *DEFAULT) THEN(CRTBNDRPG +
                          PGM(&TGTLIB/&SRCMBR) +
                          SRCFILE(&SRCLIB/&SRCFILE) DFTACTGRP(*YES) +
                          OPTION(*EVENTF) DBGVIEW(&DBGSRC) +
                          REPLACE(*YES) TGTRLS(&TGTRLS))
             ELSE       CMD(CRTBNDRPG PGM(&TGTLIB/&SRCMBR) +
                          SRCFILE(&SRCLIB/&SRCFILE) DFTACTGRP(*NO) +
                          ACTGRP(&ACTGRP) OPTION(*EVENTF) +
                          DBGVIEW(&DBGSRC) REPLACE(*YES) +
                          TGTRLS(&TGTRLS))
             ENDDO

             IF         COND(&SRCTYPE *EQ RPG) THEN(DO)
             IF         COND(&INCDBGSRC *EQ *YES) THEN(CRTRPGPGM +
                          PGM(&TGTLIB/&SRCMBR) +
                          SRCFILE(&SRCLIB/&SRCFILE) OPTION(*SRCDBG +
                          *LSTDBG) REPLACE(*YES) TGTRLS(&TGTRLS))
             ELSE       CMD(CRTRPGPGM PGM(&TGTLIB/&SRCMBR) +
                          SRCFILE(&SRCLIB/&SRCFILE) +
                          OPTION(*NOSRCDBG *NOLSTDBG) REPLACE(*YES) +
                          TGTRLS(&TGTRLS))
             ENDDO

             RETURN


 ERROR:      IF         COND(&ERRORSW) THEN(SNDPGMMSG MSGID(CPF9999) +
                          MSGF(QCPFMSG) MSGTYPE(*ESCAPE))
             CHGVAR     VAR(&ERRORSW) VALUE('1')
 ERROR2:     RCVMSG     MSGTYPE(*DIAG) MSGDTA(&ERRMSGDTA) +
                          MSGID(&ERRMSGID) MSGF(&ERRMSGF) +
                          SNDMSGFLIB(&ERRMSGFLIB)
             IF         COND(&ERRMSGID = ' ') THEN(GOTO CMDLBL(ERROR3))
             SNDPGMMSG  MSGID(&ERRMSGID) MSGF(&ERRMSGFLIB/&ERRMSGF) +
                          MSGDTA(&ERRMSGDTA) MSGTYPE(*DIAG)
             GOTO       CMDLBL(ERROR2)
 ERROR3:     RCVMSG     MSGTYPE(*EXCP) MSGDTA(&ERRMSGDTA) +
                          MSGID(&ERRMSGID) MSGF(&ERRMSGF) +
                          SNDMSGFLIB(&ERRMSGFLIB)
             SNDPGMMSG  MSGID(&ERRMSGID) MSGF(&ERRMSGFLIB/&ERRMSGF) +
                          MSGDTA(&ERRMSGDTA) MSGTYPE(*ESCAPE)

             ENDPGM


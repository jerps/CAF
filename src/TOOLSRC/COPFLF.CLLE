
/*                                                                           +
     (c) 2019 John Erps                                                      +
     This software is licensed under the MIT license (see LICENSE)           +
                                                                             +
                                                                             +
     Compile Command                                                         +
                                                                             +
     A existing PF is changed with CHGPF.                                    +
     A existing LF is first deleted with DLTF and then created again         +
     with CRTLF                                                              +
                                                                             +
*/

             PGM        PARM(&SRCLIB &SRCFILE &SRCMBR &TGTLIB)
             DCL        VAR(&SRCLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SRCFILE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SRCMBR) TYPE(*CHAR) LEN(10)
             DCL        VAR(&TGTLIB) TYPE(*CHAR) LEN(10)

             DCL        VAR(&SRCTYPE) TYPE(*CHAR) LEN(10)

             DCL        VAR(&ERRMSGID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&ERRMSGDTA) TYPE(*CHAR) LEN(256)
             DCL        VAR(&ERRMSGF) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ERRMSGFLIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ERRORSW) TYPE(*LGL)

             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERROR))


             RTVMBRD    FILE(&SRCLIB/&SRCFILE) MBR(&SRCMBR) +
                          SRCTYPE(&SRCTYPE)

             CHKOBJ     OBJ(&TGTLIB/&SRCMBR) OBJTYPE(*FILE)
             MONMSG     MSGID(CPF9801) EXEC(GOTO CMDLBL(CREATE))

             IF         COND(&SRCTYPE *EQ PF) THEN(DO)
             CHGPF      FILE(&TGTLIB/&SRCMBR) +
                          SRCFILE(&SRCLIB/&SRCFILE) OPTION(*LIST +
                          *EVENTF)
             ENDDO

             IF         COND(&SRCTYPE *EQ LF) THEN(DO)
             DLTF       FILE(&TGTLIB/&SRCMBR)
             CRTLF      FILE(&TGTLIB/&SRCMBR) +
                          SRCFILE(&SRCLIB/&SRCFILE) OPTION(*LIST +
                          *EVENTF)
             ENDDO

             GOTO       CMDLBL(END)

 CREATE:
             IF         COND(&SRCTYPE *EQ PF) THEN(CRTPF +
                          FILE(&TGTLIB/&SRCMBR) +
                          SRCFILE(&SRCLIB/&SRCFILE) OPTION(*LIST +
                          *EVENTF))

             IF         COND(&SRCTYPE *EQ LF) THEN(CRTLF +
                          FILE(&TGTLIB/&SRCMBR) +
                          SRCFILE(&SRCLIB/&SRCFILE) OPTION(*LIST +
                          *EVENTF))

 END:
             RETURN


 ERROR:      IF         COND(&ERRORSW) THEN(SNDPGMMSG MSGID(CPF9999) +
                          MSGF(QCPFMSG) MSGTYPE(*ESCAPE))
             CHGVAR     VAR(&ERRORSW) VALUE('1')
 ERROR2:     RCVMSG     MSGTYPE(*DIAG) MSGDTA(&ERRMSGDTA) +
                          MSGID(&ERRMSGID) MSGF(&ERRMSGF) +
                          SNDMSGFLIB(&ERRMSGFLIB)
             IF         COND(&ERRMSGID = ' ') THEN(GOTO CMDLBL(ERROR3))
             SNDPGMMSG  MSGID(&ERRMSGID) MSGF(&ERRMSGFLIB/&ERRMSGF) +
                          MSGDTA(&ERRMSGDTA) MSGTYPE(*DIAG)
             GOTO       CMDLBL(ERROR2)
 ERROR3:     RCVMSG     MSGTYPE(*EXCP) MSGDTA(&ERRMSGDTA) +
                          MSGID(&ERRMSGID) MSGF(&ERRMSGF) +
                          SNDMSGFLIB(&ERRMSGFLIB)
             SNDPGMMSG  MSGID(&ERRMSGID) MSGF(&ERRMSGFLIB/&ERRMSGF) +
                          MSGDTA(&ERRMSGDTA) MSGTYPE(*ESCAPE)

             ENDPGM

